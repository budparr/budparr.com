---
import { marked } from 'marked';
import BaseLayout from "../layouts/BaseLayout.astro";
import quotes from "../data/quotes.json";

let title = "Quotes I like";
let description = "Saving Quotes like baseball cards";
---

<BaseLayout content={{ title, description }}>
	<div class="md:pr-96 h-full flex flex-col justify-between" x-data="{
        selectedId: null,
        init() {
            // Set the first available tab on the page on page load.
            this.$nextTick(() => this.select(this.$id('tab', 1)))
        },
        select(id) {
            this.selectedId = id
        },
        isSelected(id) {
            return this.selectedId === id
        },
        whichChild(el, parent) {
            return Array.from(parent.children).indexOf(el) + 1
        }
    }" x-id="['tab']">

		<!-- <article set:html={content} /> -->

		{quotes.slice(0,30).map((quote) => (
			<figure x-show="isSelected($id('tab', whichChild($el, $el.parentElement)))" 
			:aria-labelledby="$id('tab', whichChild($el, $el.parentElement))" role="tabpanel" class="p-8">
				
					{quote.heading && 
						<div class="font-mono font-bold italic text-4xl" set:html={marked.parse(quote.heading)} />					
					}
					{quote.quote && 
					<blockquote class="font-serif text-2xl sm:text-3xl lg:text-5xl xl:text-6xl p-8 lg:p-24" set:html={`<span class="inline-block -ml-6">“</span>` + marked.parseInline(quote.quote) + `”`} />
					}						
					{quote.attribution && 
						<cite class="inline-block" set:html={`— ` + marked.parseInline(quote.attribution)} />
					}
			</figure>
		))}

		<div class="md:w-96 md:fixed md:right-0 md:top-0 md:h-full bg-zinc-100 dark:bg-slate-600 p-8">
			<h3 class="mb-4 dark:text-gray-400 text-gray-600">More Quotes by...</h3>
			<ul x-ref="tablist" @keydown.right.prevent.stop="$focus.wrap().next()" @keydown.home.prevent.stop="$focus.first()"
				@keydown.page-up.prevent.stop="$focus.first()" @keydown.left.prevent.stop="$focus.wrap().prev()"
				@keydown.end.prevent.stop="$focus.last()" @keydown.page-down.prevent.stop="$focus.last()" role="tablist">				
				{quotes.slice(0,30).map((quote) => (
				<li class="block my-4 w-full text-slate-600 dark:text-slate-300">
					<button :id="$id('tab', whichChild($el.parentElement, $refs.tablist))" @click="select($el.id)"
						@mousedown.prevent @focus="select($el.id)" type="button" :tabindex="isSelected($el.id) ? 0 : -1"
						:aria-selected="isSelected($el.id)"
						:class="isSelected($el.id) ? 'border-gray-200 bg-slate-300 text-slate-600' : 'border-transparent'"
						class="block font-sans  transition-all text-sm px-2 py-1 hover:bg-slate-500 rounded" role="tab" set:html={marked.parseInline(quote.attribution)} />						
						
						
				</li>				
				))}
			</ul>
		</div>
	</div>

</BaseLayout>