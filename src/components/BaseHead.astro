---
export interface Props {
  title: string;
  description: string;
  permalink: string;
  publishDate: string;
  ogImageUrl: string;
  canonicalURL?: string;
}

import site from "../data/site.js";
import "../styles/global.css";

const { title, description, permalink, publishDate, ogImageUrl, canonicalURL } =
  Astro.props;
let fullTitle = title + " | " + site.title;
let fullDesc = description + " | " + site.description;

if (title === "") {
  fullTitle = site.title;
}
if (description === "") {
  fullDesc = site.description;
}

if (import.meta.env.DEV == true) {
  console.log("dev", import.meta.env.DEV);
} else {
  console.log("pro", import.meta.env.DEV);
}
---

<!-- Global Metadata -->
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width" />
<link rel="icon" type="image/x-icon" href="/favicon.ico" />

<!-- Primary Meta Tags -->
<title>{fullTitle}</title>
<meta name="title" content={fullTitle} />
<meta name="description" content={fullDesc} />

<!-- Canonical -->
<link rel="canonical" href={canonicalURL} />

<!-- Open Graph / Facebook -->
<meta property="og:type" content="website" />
<meta property="og:url" content={canonicalURL || site.url} />
<meta property="og:title" content={fullTitle} />
<meta property="og:description" content={fullDesc} />
<meta
  property="og:image"
  content={ogImageUrl
    ? `${site.url}${ogImageUrl}`
    : `${site.url}/assets/img/social.jpg`}
/>

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={canonicalURL || site.url} />
<meta property="twitter:title" content={fullTitle} />
<meta property="twitter:description" content={fullDesc} />
<meta
  property="twitter:image"
  content={ogImageUrl
    ? `${site.url}${ogImageUrl}`
    : `${site.url}/assets/img/social.jpg`}
/>

<script>
  import Alpine from "alpinejs";
  window.Alpine = Alpine;
  Alpine.start();
  
// On page load or when changing themes, best to add inline in `head` to avoid FOUC
if (localStorage.theme === 'dark' || (!('theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
  document.documentElement.classList.add('dark')
} else {
  document.documentElement.classList.remove('dark')
}

// Whenever the user explicitly chooses light mode
localStorage.theme = 'light'

// Whenever the user explicitly chooses dark mode
localStorage.theme = 'dark'

// Whenever the user explicitly chooses to respect the OS preference
localStorage.removeItem('theme')



</script>

<!-- RSS -->
<link
  rel="alternate"
  type="application/rss+xml"
  title={`${site.name} Blog`}
  href={`${site.url}/feed/blog.xml`}
/>
